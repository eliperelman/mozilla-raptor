'use strict';

let EventEmitter = require('events').EventEmitter;
let util = require('util');

/**
 * Create an entity that can wire up event listeners to ADB log parsers
 * @constructor
 */
let Dispatcher = function(stream) {
  EventEmitter.call(this);

  this.parsers = [];
  this.stream = stream;
};

util.inherits(Dispatcher, EventEmitter);

/**
 * Register a parser to be able to handle incoming log messages
 * @param {function} parser Function generated by a parser factory. This
 *   function will be passed the log entry object and a reference to the
 *   dispatcher to broadcast parsed messages on
 */
Dispatcher.prototype.registerParser = function(parser) {
  // Saving a collection of parsers in case we want to allow unregistering
  // parsers in the future
  this.parsers.push(parser);
  this.stream.on('entry', entry => parser(entry, this));
};

/**
 * Remove any parser listeners
 */
Dispatcher.prototype.end = function() {
  this.stream.removeAllListeners('entry');
  this.removeAllListeners();
};

module.exports = Dispatcher;
